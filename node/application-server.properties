# 数据库连接 url
spring.datasource.url=jdbc:postgresql://192.168.0.4:25556/book
# 数据库连接用户名
spring.datasource.username=postgres
# 数据连接密码
spring.datasource.password=postgres
# 数据库连接驱动
spring.datasource.driver-class-name=org.postgresql.Driver
# 数据库连接池
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 连接池最小连接数
spring.datasource.hikari.minimum-idle=5
# 连接池最大连接数
spring.datasource.hikari.maximum-pool-size=50
# 连接建立超时时间
spring.datasource.hikari.connection-timeout=3000

# redis 数据库默认使用db0
spring.redis.database=0
# redis 密码
spring.redis.password=
# redis 端口
spring.redis.port=25557
# redis host
spring.redis.host=192.168.0.4
# 连接超时时间(单位：毫秒)
spring.redis.timeout=3000
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=20
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=10
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=10
# 连接池最大阻塞等待时间(单位：毫秒，使用负值表示没有限制)
spring.redis.lettuce.pool.max-wait=1000
# 在关闭客户端连接之前等待任务处理完成的最长时间(单位：毫秒)，在这之后，无论任务是否执行完成，都会被执行器关闭，默认100ms
spring.redis.lettuce.shutdown-timeout=100
# 是否缓存空值
spring.cache.redis.cache-null-values=false

# 日志相关配置
logging.level.org.springframework=INFO
logging.level.io.netty=INFO
logging.level.com.zaxxer.hikari=INFO
logging.level.com.alibaba.excel=INFO
logging.level.io.lettuce=INFO
logging.level.org.hibernate=INFO
logging.level.org.eclipse=INFO
logging.level.org.apache.zookeeper=INFO
logging.level.org.apache.http=INFO
logging.level.org.elasticsearch=INFO
logging.level.com.obs=INFO
logging.level.org.quartz.core=INFO
logging.level.net.sf.jasperreports=INFO
logging.level.logwire=DEBUG
logging.level.org.springframework.boot.autoconfigure.logging=error

# MQ 相关配置
# MQ name service address; 默认值：localhost:9876
logwire.mq.name-srv-address=192.168.0.4:9876

# Backend 服务端口; 默认值：8091
logwire.server-port=8091
# 前端资源路径; 默认值：./frontend
logwire.frontend-path=./frontend
# 环境类型; 默认值：dev; 可选值：dev; uat; prod;
logwire.environment-type=dev
# 是否开启 CSRF 校验; 默认值：true
logwire.csrf-check-enabled=true
# 注册中心地址; 默认值：127.0.0.1:2181
logwire.register-center-server-list=192.168.0.4:2182
# 共享线程池大小; 默认值：C*2
logwire.shared-thread-pool-size=
# 检测到白名单之外的代码时是否抛出异常; 默认值：false
logwire.java-files-check-enabled=false
# Document 配置
# 是否开启客户端直连文件存储服务器; 默认值：false
logwire.document.client-direct-access-storage-service=false
# 文件存储服务器类型; 默认值：db; 可选值：db; obs; oss; azure-blob; aws-s3; dir;
logwire.document.storage-type=db
# 当 storage-type 类型为 dir 时，配置该参数，值为文件存储目录
logwire.document.storage-dir=
# 华为云 OBS 相关配置

# 阿里云 OSS 相关配置

# 微软 Azure Blob 相关配置

# 亚马逊云 AWS-S3 相关配置

# 审计相关配置
# 是否开启审计日志; 默认值：false
logwire.model-audit.enabled=false
# 默认使用用户操作日志记录审计内容
logwire.model-audit.audit-type=log

# 监控配置
# 记录 SQL 耗时阈值，当 SQL 耗时超过该阈值时将 SQL MD5 记录到 Prometheus; 默认值：2000; 单位：毫秒
logwire.monitor.sql-cost-threshold=2000
# 记录 Process(Action, OpenApi, Task) 耗时阈值，当 Process 耗时超过该阈值时将 Process 名称记录到 Prometheus; 默认值：2000; 单位：毫秒
logwire.monitor.process-cost-threshold=2000

# 设计器 Git 认证配置
# 设计器证书根目录; 默认值：config/git-ssh/
logwire.git-ssh.certificate-path=config/git-ssh/
# Gitlab 公钥; 默认值：host-key.pub
logwire.git-ssh.host-key-filename=host-key.pub
# 是否直接信任 Gitlab 公钥，开启时忽略对 Gitlab 公钥的校验; 默认值：true
logwire.git-ssh.trust-all-remote=true
# 设计器私钥; 默认值：client-key.pri
logwire.git-ssh.private-key-filename=client-key.pri
# 设计器公钥; 默认值：client-key.pub
logwire.git-ssh.public-key-filename=client-key.pub

# Coopwire 配置
# 是否连接到 Coopwire; 默认值：false
logwire.coopwire.connected=false
# 设计器单点登录跳转 URL; 默认值：https://coop.logwire.cn/logwire/authorize
logwire.coopwire.sso-login-redirect-url=https://coop.logwire.cn/logwire/authorize
# 设计器单点登录获取用户信息 URL; 默认值：https://coop.logwire.cn/rest/auth/logwire/userInfo
logwire.coopwire.sso-get-user-info-url=https://coop.logwire.cn/rest/auth/logwire/userInfo
# 从 Coopwire 下载依赖 jar 包 URL; 默认值：https://coop.logwire.cn/getFile
logwire.coopwire.download-jar-url=https://coop.logwire.cn/getFile
# 访问 Coopwire ClientId
logwire.coopwire.client-key=
# 访问 Coopwire security
logwire.coopwire.client-security=

# 资源限制配置
# Query 分页查询最多允许数据条数; 默认值：1000
logwire.limit.query-max-row-size=1000
# Query 查询默认超时时间; 默认值：15; 单位：秒
logwire.limit.query-timeout-seconds=15

# Jod Office 转换配置

# 归档配置
# 归档数据库标题
#logwire.archives[demo].title=
# 归档数据库

# 文件归档相关配置
# 是否开启客户端直连文件存储服务器; 默认值：false
#logwire.archives[demo].document.client-direct-access-storage-service=false
# 文件存储服务器类型; 默认值：db; 可选值：db; obs; oss; azure-blob; aws-s3; dir;
#logwire.archives[demo].document.storage-type=db
# 当 storage-type 类型为 dir 时，配置该参数，值为文件存储目录
#logwire.archives[demo].document.storage-dir=
# 华为云 OBS 相关配置

# 阿里云 OSS 相关配置

# 微软 Azure Blob 相关配置

# 亚马逊云 AWS-S3 相关配置

# 第二数据源配置
# 第二数据源标题
#logwire.secondary-data-sources[demo].title=
# 第二数据源类型，可选值为：postgresql, mysql, oracle, sqlserver, clickhouse; 可选值：postgresql; mysql; oracle; sqlserver; clickhouse;
#logwire.secondary-data-sources[demo].db-type=
# 第二数据源 hikari 配置

# 第二数据源 clickhouse 配置

# Logwire 安全相关配置
# 数据库数据加解密相关配置
# 数据密钥管理系统类型; 默认值：logwire-kms; 可选值：logwire-kms; huaweicloud-dew; aliyun-kms;
logwire.security.encryption.key-management-system=logwire-kms
# Logwire KMS 相关配置
# 主密钥口令列表，需要包含历史上的主密钥口令（只能新增不能删除或修改）
#logwire.security.encryption.logwire-kms.master-key-passwords[0]=

# 华为云 KMS DEW 相关配置

# 阿里云 KMS 相关配置

# 租户列表
# 租户 Id, 如 t01
logwire.tenants[0].id=wongyaqi
# 租户 host, 根据浏览器地址栏中的 host 进行租户匹配，如 t01.com:8080
logwire.tenants[0].host=a.test.com:8080,a.test.com:8081
# 租户依赖产品及第三方包路径; 默认值：./products
logwire.tenants[0].lib-path=/root/wongyaqi/products
# 租户数据库 schema, 如果为空则默认使用租户 id; 默认值：{租户 Id}
logwire.tenants[0].database-schema=library
# 租户配置路径; 默认值：./tenants_config
logwire.tenants[0].config-path=/root/wongyaqi/tenants_config
# 租户主要命名空间，一般是项目命名空间，如 dhl
logwire.tenants[0].primary-namespace=library
# 设计器 Git 地址
#logwire.tenants[0].git-ssh-url=
# 租户启动时默认分支，为空则使用当前分支
#logwire.tenants[0].default-branch=
# 当前节点堆外提供哪些 process 服务
#logwire.tenants[0].exposed-processes=
# Default Admin 用户邮箱地址，如果不为空则在系统初始化时向该邮箱发送 Admin 的激活邮件，如果为空则使用 defaultAdminPassword 作为 Admin 密码
#logwire.tenants[0].default-admin-email=
# Default Admin 密码，与 defaultAdminEmail 至少一个配置有值
#logwire.tenants[0].default-admin-password=
# 租户加载时是否根据 Model 配置同步数据库表结构; 默认值：true
#logwire.tenants[0].install-on-boot=true
# 是否允许用户在多处（相同设备）登录; 默认值：true
#logwire.tenants[0].allow-multiple-login=true
# Action 线程池大小; 默认值：max(32, C*16)
#logwire.tenants[0].action-thread-pool-size=
# Action 线程池队列大小; 默认值：action thread size
#logwire.tenants[0].action-thread-pool-queue-size=
# OpenApi 线程池大小; 默认值：max(32, C*16)
#logwire.tenants[0].open-api-thread-pool-size=
# OpenApi 线程池队列大小; 默认值：openApi thread size
#logwire.tenants[0].open-api-thread-pool-queue-size=
# Background 线程池大小; 默认值：max(32, C*16)
#logwire.tenants[0].background-thread-pool-size=
# Background 线程池队列大小; 默认值：background thread size
#logwire.tenants[0].background-thread-pool-queue-size=
# 默认事务超时时间; 默认值：60; 单位：秒
#logwire.tenants[0].default-transaction-timeout-second=60
# 浏览器端登录超时时间; 默认值：60 * 60 * 24 * 7; 单位：秒
#logwire.tenants[0].browser-login-expire-time-second=
# 手机端登录超时时间; 默认值：60 * 60 * 24 * 30; 单位：秒
#logwire.tenants[0].mobile-login-expire-time-second=
# 单点登录配置
# 是否开启 sso 登录
#logwire.tenants[0].sso.enabled=
# 默认使用的 sso 方式
#logwire.tenants[0].sso.default-idp=
# sso 配置
# IDP 类型
#logwire.tenants[0].sso.idp[demo].protocol=
# 标题
#logwire.tenants[0].sso.idp[demo].title=
# 显示图标
#logwire.tenants[0].sso.idp[demo].icon=
# OIDC 配置
# 是否同步用户信息

# 退出登录时页面跳转方式
#logwire.tenants[0].sso.idp[demo].oidc.logout-mode=

# 钉钉配置
# Client Secret
#logwire.tenants[0].sso.idp[demo].dt.client-secret=
# Client Id
#logwire.tenants[0].sso.idp[demo].dt.client-id=

# QQ 配置

# 微信配置
# Client Secret
#logwire.tenants[0].sso.idp[demo].wechat.client-secret=
# Client Id
#logwire.tenants[0].sso.idp[demo].wechat.client-id=

# 租户自定义参数配置
#logwire.tenants[0].ext[demo]=

# 客户端配置
#logwire.tenants[0].client[demo]=

# 业务编号相关配置
# 生成业务编号使用时区; 默认值：Asia/Shanghai
#logwire.tenants[0].model.biz-no-timezone-id=Asia/Shanghai

# MQ 相关配置
# 最大 MQ 消费队列数量; 默认值：64
#logwire.tenants[0].mq.max-consumer-size=64

# 任务相关配置
# 任务队列配置，如 logwire.tenants[].task.consumer-queues[order]=5
#logwire.tenants[0].task.consumer-queues[demo]=

# 任务处理默认使用时区，为空时使用操作系统当前时区
#logwire.tenants[0].task.default-time-zone=

# Quartz 相关配置
# Quartz 线程数量; 默认值：4
#logwire.tenants[0].quartz.thread-count=4

# 邮箱相关配置
# 邮箱协议; 默认值：smtps
#logwire.tenants[0].mail[demo].protocol=smtps
# SMTP 授权用户名（同时也是邮件作者）
#logwire.tenants[0].mail[demo].user=
# 邮件发送人，如果未指定，则使用username
#logwire.tenants[0].mail[demo].from=
# 指定 smtp 服务器地址
#logwire.tenants[0].mail[demo].host=
# 指定 smtp 服务器端口; 默认值：465
#logwire.tenants[0].mail[demo].port=465
# 指定发件箱的登陆密码
#logwire.tenants[0].mail[demo].password=
# 连接邮件服务器超时时间; 默认值：10000; 单位：毫秒
#logwire.tenants[0].mail[demo].connectiontimeout=10000
# 发送邮件超时时间; 默认值：10000; 单位：毫秒
#logwire.tenants[0].mail[demo].timeout=10000
# 其他配置
#logwire.tenants[0].mail[demo].more[demo]=

# 租户安全相关配置
# Content Security Policy 配置
# Content Security Policy Script src 配置; 默认值：'self' 'unsafe-eval' 'nonce-logwire'
#logwire.tenants[0].security.csp.script-src='self' 'unsafe-eval' 'nonce-logwire'
# Content Security Policy Child src 配置; 默认值：'self' blob:'
#logwire.tenants[0].security.csp.child-src='self' blob:'
# Content Security Policy Frame Ancestors 配置; 默认值：'self'
#logwire.tenants[0].security.csp.frame-ancestors='self'

# 设计器密码
